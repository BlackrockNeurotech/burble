use crate::hci::*;

/// HCI Control and Baseband commands ([Vol 4] Part E, Section 7.3).
impl<T: host::Transport> Host<T> {
    /// Configures which events can be generated by the controller.
    pub async fn set_event_mask(&self, enable: EventMask) -> Result<()> {
        let r = self.exec_params(Opcode::SetEventMask, |cmd| {
            cmd.u64(enable.bits());
        });
        r.await?.into()
    }

    /// Reset the controller's link manager, baseband, and link layer.
    pub async fn reset(&self) -> Result<()> {
        self.exec(Opcode::Reset).await?.into()
    }

    /// Configures which events can be generated by the controller.
    pub async fn set_event_mask_page_2(&self, enable: EventMaskPage2) -> Result<()> {
        let r = self.exec_params(Opcode::SetEventMaskPage2, |cmd| {
            cmd.u64(enable.bits());
        });
        r.await?.into()
    }

    /// Sets the LE Supported (Host) Link Manager Protocol feature bit.
    pub async fn write_le_host_support(&self, enable: bool) -> Result<()> {
        let r = self.exec_params(Opcode::WriteLeHostSupport, |cmd| {
            cmd.bool(enable).u8(0);
        });
        r.await?.into()
    }
}
